status: 1
passed: 0
0
failed: 0
0
skipped: 0
0
duration: 2.934866000
[34;1mtest_build_failure_analysis.bats
[0m
bats-assert load stub called
bats-assert load stub called
[1G   build failure analysis function exists[K[75G 1/15[2G[1G âœ“ build failure analysis function exists[K
[0mbats-assert load stub called
[1G   build recommendations function exists[K[75G 2/15[2G[1G âœ“ build recommendations function exists[K
[0mbats-assert load stub called
[1G   analyze_build_failure validates build log parameter[K[75G 3/15[2G[31;1m[1G âœ— analyze_build_failure validates build log parameter[K
[0m[31;22m   (from function `assert_output' in file test/bats/unit/../helpers/bats-assert/load.bash, line 11,
[0m[31;22m    in test file test/bats/unit/test_build_failure_analysis.bats, line 78)
[0m[31;22m     `assert_output --partial "No build log provided"' failed
[0m[31;22m   Expected 'No build log provided' to be in output:
[0m[31;22m   [1m[0;34m=== Build Failure Analysis ===[0m
[0m[31;22m   [0;33mBuild log file not found: [0m
[0m[31;22m   [0;33mCreated empty report due to missing build log[0m
[0mbats-assert load stub called
[1G   analyze_build_failure validates metrics directory parameter[K[75G 4/15[2G[31;1m[1G âœ— analyze_build_failure validates metrics directory parameter[K
[0m[31;22m   (from function `assert_failure' in file test/bats/unit/test_build_failure_analysis.bats, line 26,
[0m[31;22m    in test file test/bats/unit/test_build_failure_analysis.bats, line 93)
[0m[31;22m     `assert_failure' failed
[0m[31;22m   Expected failure (non-zero status), got status: 0
[0mbats-assert load stub called
[1G   analyze_build_failure validates output report parameter[K[75G 5/15[2G[31;1m[1G âœ— analyze_build_failure validates output report parameter[K
[0m[31;22m   (from function `assert_failure' in file test/bats/unit/test_build_failure_analysis.bats, line 26,
[0m[31;22m    in test file test/bats/unit/test_build_failure_analysis.bats, line 109)
[0m[31;22m     `assert_failure' failed
[0m[31;22m   Expected failure (non-zero status), got status: 0
[0mbats-assert load stub called
[1G   analyze_build_failure correctly counts errors[K[75G 6/15[2G[31;1m[1G âœ— analyze_build_failure correctly counts errors[K
[0m[31;22m   (from function `assert_output' in file test/bats/unit/../helpers/bats-assert/load.bash, line 11,
[0m[31;22m    in test file test/bats/unit/test_build_failure_analysis.bats, line 141)
[0m[31;22m     `assert_output --partial "Total Errors"' failed
[0m[31;22m   Expected 'Total Errors' to be in output: # Build Failure Analysis Report
[0m[31;22m   Generated: 2025-05-04 11:49:59
[0m[31;22m   
[0m[31;22m   ## Overview
[0m[31;22m   
[0m[31;22m   * **Project**: project
[0m[31;22m   * **Build Time**: 2025-05-04 11:49:59
[0m[31;22m   * **Error Count**: 4
[0m[31;22m   * **Warning Count**: 0
[0m[31;22m   0
[0m[31;22m   * **Primary Failure Reason**: Dependency Resolution Issues
[0m[31;22m   * **Failed Phase**: unknown
[0m[31;22m   
[0m[31;22m   ## Error Breakdown
[0m[31;22m   
[0m[31;22m   * **Compilation Errors**: 0
[0m[31;22m   0
[0m[31;22m   * **Dependency Issues**: 1
[0m[31;22m   * **Test Failures**:
[0m[31;22m   * **Test Errors**:
[0m[31;22m   * **Plugin Errors**: 0
[0m[31;22m   0
[0m[31;22m   * **Memory Issues**: 0
[0m[31;22m   0
[0m[31;22m   
[0m[31;22m   ## Dependency Issues
[0m[31;22m   
[0m[31;22m   ```
[0m[31;22m   [INFO] Building project
[0m[31;22m   [ERROR] package org.example.missing does not exist
[0m[31;22m   [INFO] Processing source files
[0m[31;22m   [ERROR] cannot find symbol: class TestClass
[0m[31;22m   ```
[0m[31;22m   
[0m[31;22m   ## Resource Utilization
[0m[31;22m   
[0m[31;22m   * **Peak CPU Usage**: 25.5%
[0m[31;22m   * **Peak Memory Usage**: 1024MB
[0m[31;22m   * **Total System Memory**: 65536MB
[0m[31;22m   
[0m[31;22m   ## Recommendations
[0m[31;22m   
[0m[31;22m   * Check your project's dependencies and ensure all required libraries are in your pom.xml
[0m[31;22m   * Verify dependency versions are compatible with your project
[0m[31;22m   * Run 'mvn dependency:tree' to analyze the dependency hierarchy
[0m[31;22m   * Consider adding explicit dependencies for transitively imported packages
[0m[31;22m   
[0m[31;22m   ## Next Steps
[0m[31;22m   
[0m[31;22m   1. Address the primary failure reason: Dependency Resolution Issues
[0m[31;22m   2. Fix errors in sequence, starting with compilation and dependency issues
[0m[31;22m   3. Run the build with more detailed logging for troubleshooting: 'mvn -X clean install'
[0m[31;22m   4. Consider running with Maven Batch Mode for cleaner output: 'mvn -B clean install'
[0m[31;22m   
[0m[31;22m   ---
[0m[31;22m   Report generated by MVNimble Test Engineering Tricorder
[0mbats-assert load stub called
[1G   analyze_build_failure extracts peak resource usage[K[75G 7/15[2G[1G âœ“ analyze_build_failure extracts peak resource usage[K
[0mbats-assert load stub called
[1G   analyze_build_failure identifies missing package dependencies[K[75G 8/15[2G[31;1m[1G âœ— analyze_build_failure identifies missing package dependencies[K
[0m[31;22m   (from function `assert_output' in file test/bats/unit/../helpers/bats-assert/load.bash, line 11,
[0m[31;22m    in test file test/bats/unit/test_build_failure_analysis.bats, line 192)
[0m[31;22m     `assert_output --partial "Dependency Errors"' failed
[0m[31;22m   Expected 'Dependency Errors' to be in output: # Build Failure Analysis Report
[0m[31;22m   Generated: 2025-05-04 11:50:00
[0m[31;22m   
[0m[31;22m   ## Overview
[0m[31;22m   
[0m[31;22m   * **Project**: Unknown Project
[0m[31;22m   * **Build Time**: 2025-05-04 11:50:00
[0m[31;22m   * **Error Count**: 3
[0m[31;22m   * **Warning Count**: 0
[0m[31;22m   0
[0m[31;22m   * **Primary Failure Reason**: Dependency Resolution Issues
[0m[31;22m   * **Failed Phase**: unknown
[0m[31;22m   
[0m[31;22m   ## Error Breakdown
[0m[31;22m   
[0m[31;22m   * **Compilation Errors**: 0
[0m[31;22m   0
[0m[31;22m   * **Dependency Issues**: 3
[0m[31;22m   * **Test Failures**:
[0m[31;22m   * **Test Errors**:
[0m[31;22m   * **Plugin Errors**: 0
[0m[31;22m   0
[0m[31;22m   * **Memory Issues**: 0
[0m[31;22m   0
[0m[31;22m   
[0m[31;22m   ## Dependency Issues
[0m[31;22m   
[0m[31;22m   ```
[0m[31;22m   [ERROR] /project/src/main/java/com/example/App.java:[15,34] package org.example.missing does not exist
[0m[31;22m   [ERROR] /project/src/main/java/com/example/Utils.java:[22,45] package org.example.another.missing does not exist
[0m[31;22m   [ERROR] /project/src/main/java/com/example/Helper.java:[8,34] package org.example.missing does not exist
[0m[31;22m   ```
[0m[31;22m   
[0m[31;22m   ## Resource Utilization
[0m[31;22m   
[0m[31;22m   * **Peak CPU Usage**: 25.5%
[0m[31;22m   * **Peak Memory Usage**: 1024MB
[0m[31;22m   * **Total System Memory**: 65536MB
[0m[31;22m   
[0m[31;22m   ## Recommendations
[0m[31;22m   
[0m[31;22m   * Check your project's dependencies and ensure all required libraries are in your pom.xml
[0m[31;22m   * Verify dependency versions are compatible with your project
[0m[31;22m   * Run 'mvn dependency:tree' to analyze the dependency hierarchy
[0m[31;22m   * Consider adding explicit dependencies for transitively imported packages
[0m[31;22m   
[0m[31;22m   ## Next Steps
[0m[31;22m   
[0m[31;22m   1. Address the primary failure reason: Dependency Resolution Issues
[0m[31;22m   2. Fix errors in sequence, starting with compilation and dependency issues
[0m[31;22m   3. Run the build with more detailed logging for troubleshooting: 'mvn -X clean install'
[0m[31;22m   4. Consider running with Maven Batch Mode for cleaner output: 'mvn -B clean install'
[0m[31;22m   
[0m[31;22m   ---
[0m[31;22m   Report generated by MVNimble Test Engineering Tricorder
[0mbats-assert load stub called
[1G   analyze_build_failure identifies access violations[K[75G 9/15[2G[31;1m[1G âœ— analyze_build_failure identifies access violations[K
[0m[31;22m   (from function `assert_output' in file test/bats/unit/../helpers/bats-assert/load.bash, line 11,
[0m[31;22m    in test file test/bats/unit/test_build_failure_analysis.bats, line 215)
[0m[31;22m     `assert_output --partial "Access Violations"' failed
[0m[31;22m   Expected 'Access Violations' to be in output: # Build Failure Analysis Report
[0m[31;22m   Generated: 2025-05-04 11:50:00
[0m[31;22m   
[0m[31;22m   ## Overview
[0m[31;22m   
[0m[31;22m   * **Project**: Unknown Project
[0m[31;22m   * **Build Time**: 2025-05-04 11:50:00
[0m[31;22m   * **Error Count**: 2
[0m[31;22m   * **Warning Count**: 0
[0m[31;22m   0
[0m[31;22m   * **Primary Failure Reason**: Unknown Build Failure
[0m[31;22m   * **Failed Phase**: unknown
[0m[31;22m   
[0m[31;22m   ## Error Breakdown
[0m[31;22m   
[0m[31;22m   * **Compilation Errors**: 0
[0m[31;22m   0
[0m[31;22m   * **Dependency Issues**: 0
[0m[31;22m   0
[0m[31;22m   * **Test Failures**:
[0m[31;22m   * **Test Errors**:
[0m[31;22m   * **Plugin Errors**: 0
[0m[31;22m   0
[0m[31;22m   * **Memory Issues**: 0
[0m[31;22m   0
[0m[31;22m   
[0m[31;22m   ## Resource Utilization
[0m[31;22m   
[0m[31;22m   * **Peak CPU Usage**: 25.5%
[0m[31;22m   * **Peak Memory Usage**: 1024MB
[0m[31;22m   * **Total System Memory**: 65536MB
[0m[31;22m   
[0m[31;22m   ## Recommendations
[0m[31;22m   
[0m[31;22m   
[0m[31;22m   ## Next Steps
[0m[31;22m   
[0m[31;22m   1. Address the primary failure reason: Unknown Build Failure
[0m[31;22m   2. Fix errors in sequence, starting with compilation and dependency issues
[0m[31;22m   3. Run the build with more detailed logging for troubleshooting: 'mvn -X clean install'
[0m[31;22m   4. Consider running with Maven Batch Mode for cleaner output: 'mvn -B clean install'
[0m[31;22m   
[0m[31;22m   ---
[0m[31;22m   Report generated by MVNimble Test Engineering Tricorder
[0mbats-assert load stub called
[1G   analyze_build_failure generates a properly formatted report[K[75G10/15[2G[31;1m[1G âœ— analyze_build_failure generates a properly formatted report[K
[0m[31;22m   (from function `assert_output' in file test/bats/unit/../helpers/bats-assert/load.bash, line 11,
[0m[31;22m    in test file test/bats/unit/test_build_failure_analysis.bats, line 235)
[0m[31;22m     `assert_output --partial "# Enhanced Build Failure Analysis Report"' failed
[0m[31;22m   Expected '# Enhanced Build Failure Analysis Report' to be in output: # Build Failure Analysis Report
[0m[31;22m   Generated: 2025-05-04 11:50:00
[0m[31;22m   
[0m[31;22m   ## Overview
[0m[31;22m   
[0m[31;22m   * **Project**: Unknown Project
[0m[31;22m   * **Build Time**: 2025-05-04 11:50:00
[0m[31;22m   * **Error Count**: 1
[0m[31;22m   * **Warning Count**: 0
[0m[31;22m   0
[0m[31;22m   * **Primary Failure Reason**: Unknown Build Failure
[0m[31;22m   * **Failed Phase**: unknown
[0m[31;22m   
[0m[31;22m   ## Error Breakdown
[0m[31;22m   
[0m[31;22m   * **Compilation Errors**: 0
[0m[31;22m   0
[0m[31;22m   * **Dependency Issues**: 0
[0m[31;22m   0
[0m[31;22m   * **Test Failures**:
[0m[31;22m   * **Test Errors**:
[0m[31;22m   * **Plugin Errors**: 0
[0m[31;22m   0
[0m[31;22m   * **Memory Issues**: 0
[0m[31;22m   0
[0m[31;22m   
[0m[31;22m   ## Resource Utilization
[0m[31;22m   
[0m[31;22m   * **Peak CPU Usage**: 25.5%
[0m[31;22m   * **Peak Memory Usage**: 1024MB
[0m[31;22m   * **Total System Memory**: 65536MB
[0m[31;22m   
[0m[31;22m   ## Recommendations
[0m[31;22m   
[0m[31;22m   
[0m[31;22m   ## Next Steps
[0m[31;22m   
[0m[31;22m   1. Address the primary failure reason: Unknown Build Failure
[0m[31;22m   2. Fix errors in sequence, starting with compilation and dependency issues
[0m[31;22m   3. Run the build with more detailed logging for troubleshooting: 'mvn -X clean install'
[0m[31;22m   4. Consider running with Maven Batch Mode for cleaner output: 'mvn -B clean install'
[0m[31;22m   
[0m[31;22m   ---
[0m[31;22m   Report generated by MVNimble Test Engineering Tricorder
[0mbats-assert load stub called
[1G   generate_build_recommendations returns success[K[75G11/15[2G[1G âœ“ generate_build_recommendations returns success[K
[0mbats-assert load stub called
[1G   analyze_build_failure creates parent directories if they don't exist[K[75G12/15[2G[31;1m[1G âœ— analyze_build_failure creates parent directories if they don't exist[K
[0m[31;22m   (from function `assert' in file test/bats/unit/test_build_failure_analysis.bats, line 35,
[0m[31;22m    in test file test/bats/unit/test_build_failure_analysis.bats, line 273)
[0m[31;22m     `assert [ -f "${TEST_TEMP_DIR}/reports/nested/build_report.md" ]' failed
[0m[31;22m   Assertion failed: [ -f /var/folders/3b/c4p1r6sj1vd9y689wrpkrnhh0000gn/T/bats-run-jyHyjV/test/12/reports/nested/build_report.md ]
[0mbats-assert load stub called
[1G   mvnimble main script includes build analysis command-line option[K[75G13/15[2G[1G âœ“ mvnimble main script includes build analysis command-line option[K
[0mbats-assert load stub called
[1G   analyze_build_failure handles missing metrics file gracefully[K[75G14/15[2G[1G âœ“ analyze_build_failure handles missing metrics file gracefully[K
[0mbats-assert load stub called
[1G   analyze_build_failure works with realistic Maven errors[K[75G15/15[2G[31;1m[1G âœ— analyze_build_failure works with realistic Maven errors[K
[0m[31;22m   (from function `assert_output' in file test/bats/unit/../helpers/bats-assert/load.bash, line 11,
[0m[31;22m    in test file test/bats/unit/test_build_failure_analysis.bats, line 350)
[0m[31;22m     `assert_output --partial "Total Errors"' failed
[0m[31;22m   Expected 'Total Errors' to be in output: # Build Failure Analysis Report
[0m[31;22m   Generated: 2025-05-04 11:50:01
[0m[31;22m   
[0m[31;22m   ## Overview
[0m[31;22m   
[0m[31;22m   * **Project**: Checkvox 0.1.0-SNAPSHOT
[0m[31;22m   * **Build Time**: 2025-05-04 11:50:01
[0m[31;22m   * **Error Count**: 5
[0m[31;22m   * **Warning Count**: 0
[0m[31;22m   0
[0m[31;22m   * **Primary Failure Reason**: Dependency Resolution Issues
[0m[31;22m   * **Failed Phase**: unknown
[0m[31;22m   
[0m[31;22m   ## Error Breakdown
[0m[31;22m   
[0m[31;22m   * **Compilation Errors**: 0
[0m[31;22m   0
[0m[31;22m   * **Dependency Issues**: 3
[0m[31;22m   * **Test Failures**:
[0m[31;22m   * **Test Errors**:
[0m[31;22m   * **Plugin Errors**: 0
[0m[31;22m   0
[0m[31;22m   * **Memory Issues**: 0
[0m[31;22m   0
[0m[31;22m   
[0m[31;22m   ## Dependency Issues
[0m[31;22m   
[0m[31;22m   ```
[0m[31;22m   [INFO] Rule 0: org.apache.maven.enforcer.rules.version.RequireMavenVersion passed
[0m[31;22m   [INFO] Rule 1: org.apache.maven.enforcer.rules.version.RequireJavaVersion passed
[0m[31;22m   [ERROR] /Users/vorthruna/Code/Checkvox/src/test/java/io/checkvox/domain/converter/ContextTypeConverterTest.java:[15,34] package io.checkvox.test.dimension does not exist
[0m[31;22m   [ERROR] /Users/vorthruna/Code/Checkvox/src/test/java/io/checkvox/domain/converter/ContextTypeConverterTest.java:[16,34] package io.checkvox.test.dimension does not exist
[0m[31;22m   [ERROR] /Users/vorthruna/Code/Checkvox/src/test/java/io/checkvox/domain/entity/DomainContextClassifierPropertyBasedTest.java:[17,32] package net.jqwik.api.statistics does not exist
[0m[31;22m   [ERROR] /Users/vorthruna/Code/Checkvox/src/test/java/io/checkvox/domain/entity/DomainContextClassifierComprehensiveTest.java:[341,32] planningApproach has private access in io.checkvox.domain.entity.DomainContextClassifier.ProcessTemplate
[0m[31;22m   [ERROR] /Users/vorthruna/Code/Checkvox/src/test/java/io/checkvox/domain/entity/DomainContextClassifierIntegrationTest.java:[98,37] incompatible types: java.util.List<io.checkvox.domain.entity.Tag> cannot be converted to java.util.Set<io.checkvox.domain.entity.Tag>
[0m[31;22m   ```
[0m[31;22m   
[0m[31;22m   ## Resource Utilization
[0m[31;22m   
[0m[31;22m   * **Peak CPU Usage**: 6.73%
[0m[31;22m   * **Peak Memory Usage**: 5644MB
[0m[31;22m   * **Total System Memory**: 65536MB
[0m[31;22m   
[0m[31;22m   ## Recommendations
[0m[31;22m   
[0m[31;22m   * Check your project's dependencies and ensure all required libraries are in your pom.xml
[0m[31;22m   * Verify dependency versions are compatible with your project
[0m[31;22m   * Run 'mvn dependency:tree' to analyze the dependency hierarchy
[0m[31;22m   * Consider adding explicit dependencies for transitively imported packages
[0m[31;22m   
[0m[31;22m   ## Next Steps
[0m[31;22m   
[0m[31;22m   1. Address the primary failure reason: Dependency Resolution Issues
[0m[31;22m   2. Fix errors in sequence, starting with compilation and dependency issues
[0m[31;22m   3. Run the build with more detailed logging for troubleshooting: 'mvn -X clean install'
[0m[31;22m   4. Consider running with Maven Batch Mode for cleaner output: 'mvn -B clean install'
[0m[31;22m   
[0m[31;22m   ---
[0m[31;22m   Report generated by MVNimble Test Engineering Tricorder
[0m[31;1m
15 tests, 9 failures
[0m
