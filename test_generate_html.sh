#!/bin/bash

# Define paths
INPUT_FILE="./results/checkvox/data.json"
OUTPUT_FILE="./results/checkvox/test_report.html"

# Check if input file exists
if [[ ! -f "$INPUT_FILE" ]]; then
  echo "Input file not found: $INPUT_FILE"
  exit 1
fi

# Parse JSON data
build_start=$(grep -o '"build_start": [0-9]*' "$INPUT_FILE" | grep -o '[0-9]*')
build_end=$(grep -o '"build_end": [0-9]*' "$INPUT_FILE" | grep -o '[0-9]*')
duration=$(grep -o '"build_duration": [0-9.]*' "$INPUT_FILE" | grep -o '[0-9.]*')
build_status=$(grep -o '"build_status": "[^"]*"' "$INPUT_FILE" | cut -d'"' -f4)
maven_command=$(grep -o '"maven_command": "[^"]*"' "$INPUT_FILE" | cut -d'"' -f4)
# Extract system properties
os=$(grep -o '"os": "[^"]*"' "$INPUT_FILE" | head -1 | cut -d'"' -f4)
cpu_cores=$(grep -o '"cpu_cores": [0-9]*' "$INPUT_FILE" | head -1 | grep -o '[0-9]*')
memory_mb=$(grep -o '"memory_mb": [0-9]*' "$INPUT_FILE" | head -1 | grep -o '[0-9]*')

# Convert timestamp to readable date
date=$(date -r "$build_start" '+%Y-%m-%d %H:%M:%S')

# Set test counts based on build status
total_tests="1"
passed_tests="0"
failed_tests="0"
skipped_tests="0"

if [[ "$build_status" == "success" ]]; then
  passed_tests="1"
elif [[ "$build_status" == "failure" ]]; then
  failed_tests="1"
fi

# Generate HTML report
cat > "$OUTPUT_FILE" << EOF
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>MVNimble Test Report</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 0; padding: 20px; color: #333; }
    h1, h2 { color: #2c3e50; }
    .container { max-width: 1200px; margin: 0 auto; }
    .summary { display: flex; justify-content: space-between; margin-bottom: 30px; }
    .summary-card { background: #f8f9fa; border-radius: 8px; padding: 15px; min-width: 150px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
    .passed { color: #27ae60; }
    .failed { color: #e74c3c; }
    .skipped { color: #f39c12; }
    .big-number { font-size: 24px; font-weight: bold; margin: 10px 0; }
    table { width: 100%; border-collapse: collapse; margin-bottom: 30px; }
    th, td { text-align: left; padding: 12px; border-bottom: 1px solid #ddd; }
    th { background-color: #f2f2f2; }
    tr:hover { background-color: #f5f5f5; }
    footer { margin-top: 50px; text-align: center; font-size: 12px; color: #7f8c8d; }
  </style>
</head>
<body>
  <div class="container">
    <h1>MVNimble Test Report</h1>
    <p>Generated: $date</p>

    <h2>Summary</h2>
    <div class="summary">
      <div class="summary-card">
        <h3>Total Tests</h3>
        <div class="big-number">$total_tests</div>
      </div>
      <div class="summary-card">
        <h3>Passed</h3>
        <div class="big-number passed">$passed_tests</div>
      </div>
      <div class="summary-card">
        <h3>Failed</h3>
        <div class="big-number failed">$failed_tests</div>
      </div>
      <div class="summary-card">
        <h3>Skipped</h3>
        <div class="big-number skipped">$skipped_tests</div>
      </div>
      <div class="summary-card">
        <h3>Duration</h3>
        <div class="big-number">$(printf "%.2f" $duration)s</div>
      </div>
    </div>
EOF

# Add failed tests section if needed
if [[ "$failed_tests" == "1" ]]; then
cat >> "$OUTPUT_FILE" << EOF
    <h2>Failed Tests</h2>
    <table>
      <tr>
        <th>Test</th>
        <th>Error</th>
      </tr>
      <tr>
        <td>Maven Build</td>
        <td>The Maven build failed. Check the detailed build logs for more information.</td>
      </tr>
EOF

# Add maven command if available
if [[ -n "$maven_command" ]]; then
cat >> "$OUTPUT_FILE" << EOF
      <tr>
        <td>Command</td>
        <td><code>$maven_command</code></td>
      </tr>
EOF
fi

cat >> "$OUTPUT_FILE" << EOF
    </table>
EOF
fi

# Add system information
cat >> "$OUTPUT_FILE" << EOF
    <h2>System Information</h2>
    <table>
      <tr><td>OS</td><td>$os</td></tr>
      <tr><td>CPU Cores</td><td>$cpu_cores</td></tr>
      <tr><td>Available Memory</td><td>${memory_mb}MB</td></tr>
      <tr><td>MVNimble Version</td><td>1.0.0</td></tr>
EOF

# Add build-specific information if available
if [[ -n "$maven_command" ]]; then
cat >> "$OUTPUT_FILE" << EOF
      <tr><td>Maven Command</td><td>$maven_command</td></tr>
EOF
fi

if [[ -n "$build_status" ]]; then
  # Set status color
  status_color="#27ae60"
  if [[ "$build_status" == "failure" ]]; then
    status_color="#e74c3c"
  fi
cat >> "$OUTPUT_FILE" << EOF
      <tr><td>Build Status</td><td style="color: $status_color; font-weight: bold;">$build_status</td></tr>
EOF
fi

# Complete the HTML
cat >> "$OUTPUT_FILE" << EOF
    </table>
    
    <footer>
      Report generated by MVNimble Test Engineering Tricorder v1.0.0<br>
      Copyright (C) 2025 Eric C. Mumford (@heymumford) Code covered by MIT license
    </footer>
  </div>
</body>
</html>
EOF

echo "Test HTML report generated: $OUTPUT_FILE"